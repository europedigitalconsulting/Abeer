@page "/ads"
@using System.Security.Claims
@inject IHttpClientFactory HttpClientFactory
@inject Microsoft.Extensions.Localization.IStringLocalizer<Ads> Loc

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public string Term { get; set; }
    public bool IsAdmin { get; set; }

    List<Abeer.Shared.Functional.AdModel> All = new List<Abeer.Shared.Functional.AdModel>();
    List<Abeer.Shared.Functional.AdModel> Items = new List<Abeer.Shared.Functional.AdModel>();

    void countTerm(KeyboardEventArgs e)
    {
        if (Term?.Length > 5)
            Search();
    }

    protected override async Task OnInitializedAsync()
    {
        var httpClient = HttpClientFactory.CreateClient("Abeer.Anonymous");
        var getAll = await httpClient.GetAsync("/api/Adss/Visibled"); 
        if (getAll.IsSuccessStatusCode)
        {
            var json = await getAll.Content.ReadAsStringAsync();
            All = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Abeer.Shared.Functional.AdModel>>(json);
            if (All != null)
            {
                Items = All?.ToList();
            }
        }


        var authenticateSate = await authenticationStateTask;

        if (authenticateSate.User?.Identity.IsAuthenticated == true)
        {
            IsAdmin = (authenticateSate.User.Identity.IsAuthenticated && authenticateSate.User.HasClaim(ClaimTypes.Role, "admin"));
        }
    }

    void Search()
    {
        Items = All?.Where(a => (a.Title != null && a.Title.Contains(Term)) || (a.Description != null && a.Description.Contains(Term))).ToList();
    }
}

<section class="section">
    <div class="section-header">
        <h1>@Loc["Title"]</h1>
    </div>
    <div class="section-header">
        <div class="input-group">
            <input type="search" id="example-input1-group2" name="example-input1-group2" class="form-control" @bind="Term" @onkeyup="countTerm">
            <span class="input-group-btn">
                <button type="button" class="btn" @onclick="Search"><i class="fa fa-2x  fa-search"></i></button>
            </span>
            <div class="search-backdrop"></div>
        </div>
    </div>
    <div class="section-body">
        <div class="row">
            <div class="col-12">
                @if (Items.Any())
                {
                    foreach (var ad in Items)
                    {
                        <CardAd Loc="Loc" Ad="ad" Editable="false"></CardAd>
                    }
                }
                else
                {
                    <div class="card bg-info p-5">
                        <div class="text-center">@Loc["NoAds"]</div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<div class="fixed-bottom m-5">
    @if (IsAdmin)
    {
        <a href="ManageAds" class="btn btn-danger btn-circle btn-xl float-right ml-2"><i class="fa fa-2x fa-database"></i></a>
    }
    <a href="CreateAd" class="btn btn-danger btn-circle btn-xl float-right"><i class="fa fa-2x fa-plus"></i></a>
</div>
