@page "/ViewProfile/{ProfileId}"
@inject Microsoft.Extensions.Localization.IStringLocalizer<EditProfile> Loc
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation
@inject Abeer.Client.UISdk.NavigationUrlService NavigationUrlService
@using System.Security.Claims;

@layout ViewLayout
@code
{
    public ClaimsPrincipal User { get; set; }

    [Parameter]
    public string ProfileId { get; set; }

    public ViewApplicationUser UserProfile { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override Task OnInitializedAsync()
    {
        NavigationUrlService.ProfileUrl = Navigation.ToAbsoluteUri("/profile/Edit").ToString();
        return base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await authenticationStateTask;

        User = authState.User;

        if (User.Identity.IsAuthenticated)
        {
            if (string.IsNullOrEmpty(ProfileId))
            {
                ProfileId = User.FindFirstValue(ClaimTypes.NameIdentifier);
            }
        }

        if (!string.IsNullOrEmpty(ProfileId))
        {
            var httpClient = HttpClientFactory.CreateClient("Abeer.Anonymous");

            var getProfile = await httpClient.GetAsync($"/api/viewProfile/{ProfileId}");

            if (getProfile.StatusCode == System.Net.HttpStatusCode.NotFound)
                Navigation.NavigateTo(Navigation.ToAbsoluteUri($"/Identity/Account/Register?PinCode={ProfileId}").ToString(), true);

            getProfile.EnsureSuccessStatusCode();
            var json = await getProfile.Content.ReadAsStringAsync();
            UserProfile = Newtonsoft.Json.JsonConvert.DeserializeObject<ViewApplicationUser>(json);

            NavigationUrlService.SetUrls($"https://www.google.com/maps/search/?api=1&query={UserProfile.Address},{UserProfile.City}%20{UserProfile.Country}&query_place_id={UserProfile.DisplayName}",
                Navigation.ToAbsoluteUri($"/ImportContact/{UserProfile.Id}").ToString());

            await InvokeAsync(StateHasChanged);
        }

        NavigationUrlService.ShowImport = true;

        if(User.Identity.IsAuthenticated)
        {
            NavigationUrlService.ShowContacts = true;
            NavigationUrlService.ShowMyAds = true;

            if (User.FindFirstValue(ClaimTypes.NameIdentifier).Equals(UserProfile.Id))
            {
                NavigationUrlService.ShowImport = false;
                NavigationUrlService.ShowEditProfile = true;
            }
        }

        await base.OnParametersSetAsync();
    }
}

@if (UserProfile != null)
{
    <UserProfileControl ReadOnly="true" DisplayName="@UserProfile.DisplayName" PhotoUrl="@UserProfile.PhotoUrl" Title="@UserProfile.Title" City="@UserProfile.City"
                        Country="@UserProfile.Country" Description="@UserProfile.Description"
                        Email="@UserProfile.Email" PhoneNumber="@UserProfile.PhoneNumber"
                        ProfileUrl="@Navigation.ToAbsoluteUri($"/ViewProfile/{UserProfile.Id}").ToString()"
                        SocialNetworkConnected="UserProfile.SocialNetworkConnected" CustomLinks="UserProfile.CustomLinks"></UserProfileControl>
}
else
{
    <span>loading...</span>
}