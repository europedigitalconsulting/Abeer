@page "/CreateAd"
@using Abeer.Shared.Functional
@inject Microsoft.Extensions.Localization.IStringLocalizer<CreateAd> Loc
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject IJSRuntime jsRuntime
@code
{
    public string Step { get; set; } = "Step1";
    public AdModel Ad { get; set; } = new AdModel();
    public AdPrice CurrentPrice { get; set; } = new AdPrice();
    public List<AdPrice> AdPrices { get; set; } = new List<AdPrice>();
    private List<Tuple<string, decimal>> Cart { get; set; } = new List<Tuple<string, decimal>>();

    protected override async Task OnInitializedAsync()
    {
        Cart = new List<Tuple<string, decimal>>()
    {
            new Tuple<string, decimal>("Pass Premium", 99.9M),
            new Tuple<string, decimal>("Pass Ultimate", 199.99M)
        };
        await base.OnInitializedAsync();
    }
    async Task Step1()
    {
        Step = "Step1";
        await InvokeAsync(StateHasChanged);
    }

    async Task Step2()
    {
        Step = "Step2";

        var httpClient = HttpClientFactory.CreateClient("Abeer.Anonymous");
        var getAll = await httpClient.GetAsync("/api/adprice");
        getAll.EnsureSuccessStatusCode();
        var json = await getAll.Content.ReadAsStringAsync();
        AdPrices = Newtonsoft.Json.JsonConvert.DeserializeObject<List<AdPrice>>(json);

        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
    }

    async Task SelectPrice(AdPrice currentPrice)
    {
        CurrentPrice = currentPrice;
        Step = "Step3";
        await InvokeAsync(StateHasChanged);
    }

    bool PublishHasError;

    async Task ValidAd()
    {
        var CreateAdRequest = new CreateAdRequestViewModel
        {
            Ad = Ad,
            Price = CurrentPrice
        };

        var response = await InsertAd(CreateAdRequest);

        if (!PublishHasError)
        {
            var json = await response.Content.ReadAsStringAsync();
            var Ad = Newtonsoft.Json.JsonConvert.DeserializeObject<AdModel>(json);
            NavigationManager.NavigateTo($"/ValidAd/{Ad.Id}", true);
        }

        await InvokeAsync(StateHasChanged);
    }

    async Task<HttpResponseMessage> InsertAd(CreateAdRequestViewModel CreateAdRequest)
    {
        var httpClient = HttpClientFactory.CreateClient("Abeer.Anonymous");
        var response = await httpClient.PostAsJsonAsync<CreateAdRequestViewModel>("/api/Ad", CreateAdRequest);
        PublishHasError = !response.IsSuccessStatusCode;
        return response;
    }

    async Task ProcessPayment()
    {
        var CreateAdRequest = new CreateAdRequestViewModel
        {
            Ad = Ad,
            Price = CurrentPrice
        };

        var httpClient = HttpClientFactory.CreateClient("Abeer.Anonymous");
        var response = await httpClient.PostAsJsonAsync<CreateAdRequestViewModel>("/api/Ad", CreateAdRequest);
        PublishHasError = !response.IsSuccessStatusCode;

        if (!PublishHasError)
        {
            var json = await response.Content.ReadAsStringAsync();
            var Ad = Newtonsoft.Json.JsonConvert.DeserializeObject<AdModel>(json);
            NavigationManager.NavigateTo(NavigationManager.ToAbsoluteUri($"PayAd/{Ad.Id}").ToString(), true);
        }

        await InvokeAsync(StateHasChanged);
    }

    void AssignImageUrl1(string imgUrl) => Ad.ImageUrl1 = imgUrl;
    void AssignImageUrl2(string imgUrl) => Ad.ImageUrl2 = imgUrl;
    void AssignImageUrl3(string imgUrl) => Ad.ImageUrl3 = imgUrl;
    void AssignImageUrl4(string imgUrl) => Ad.ImageUrl4 = imgUrl;
}

@if (Step == "Step1")
{
    <section class="section">
        <div class="section-header">
            <h1>@Loc["Step1Title"]</h1>
        </div>
        <div class="section-body">
            <div class="card">
                <div class="card-body">
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["AdTitle"]</label>
                        <input type="text" Class="form-control" @bind="Ad.Title" />
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Description"]</label>
                        <textarea type="text" Class="form-control h-100" rows="6" @bind="Ad.Description" cols="6"></textarea>
                    </div>
                    <div class="form-group form-group col-lg-6 col-md-6 col-sm-6">
                        <label>@Loc["Price"]</label>
                        <input type="number" Class="form-control" @bind="Ad.Price" />
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Url1"]</label>
                        <input type="url" Class="form-control" @bind="Ad.Url1" />
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Url2"]</label>
                        <input type="url" Class="form-control" @bind="Ad.Url2" />
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Url3"]</label>
                        <input type="url" Class="form-control" @bind="Ad.Url3" />
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Url4"]</label>
                        <input type="url" Class="form-control" @bind="Ad.Url4" />
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Image1"]</label>
                        <MediaUploader Id="AssignImageUrl1" OnChange="AssignImageUrl1"></MediaUploader>
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Image2"]</label>
                        <MediaUploader Id="AssignImageUrl2" OnChange="AssignImageUrl2"></MediaUploader>
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Image3"]</label>
                        <MediaUploader Id="AssignImageUrl3" OnChange="AssignImageUrl3"></MediaUploader>
                    </div>
                    <div class="form-group form-group col-lg-12 col-md-12 col-sm-12">
                        <label>@Loc["Image4"]</label>
                        <MediaUploader Id="AssignImageUrl4" OnChange="AssignImageUrl4"></MediaUploader>
                    </div>
                    <div class="form-group">
                        <div class="text-center">
                            <a href="Ads" class="btn btn-lg" title="@Loc["Cancel"]"><i class="fa fa-2x fa-arrow-left"></i></a>
                            <a type="submit" class="btn btn-lg" @onclick="Step2" title="@Loc["StartPublish"]"><i class="fa fa-2x fa-arrow-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
else if (Step == "Step2")
{
    <section class="section">
        <div class="section-header">
            <h1>@Loc["  "]</h1>
        </div>
        <div class="section-body">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        @foreach (var price in AdPrices)
                        {
                            <div class="col-lg-3 col-md-3 col-sm-12">
                                <div class="card profile-widget border p-4">
                                    <div class="profile-widget-header">
                                        @if (@price.Value > 0)
                                        {
                                            <div class="float-right">
                                                <span class="badge badge-info">@price.Value €</span>
                                            </div>
                                        }
                                        <h4>@price.PriceName</h4>
                                    </div>
                                    <div class="profile-widget-description pb-0">
                                        <div class="profile-widget-name">@price.PriceDescription</div>
                                    </div>
                                    <div class="text-center">

                                        <button type="submit" class="btn btn-info btn-lg" @onclick="@(async () => await SelectPrice(price))">@Loc["Select"]</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="text-center">
                        <button href="#" class="btn btn-lg" title="@Loc["Back"]" @onclick="Step1"><i class="fa fa-2x fa-arrow-left"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
else if (Step == "Step3")
{
    <section class="section">
        <div class="section-header">
            <h1>@Loc["Step3Title"]</h1>
        </div>
        <div class="section-body">
            <div class="card">
                <div class="card-body">
                    @if (PublishHasError)
                    {
                        <div class="alert alert-danger">
                            @Loc["PublishError"]
                        </div>
                    }
                    <h3>@Loc["Summary"]</h3>
                    <div class="form-group col-6 col-sm-12">
                        <label>@Loc["AdTitle"]</label>
                        <input type="text" Class="form-control" @bind="Ad.Title" />
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <label>@Loc["Description"]</label>
                        <textarea type="text" Class="form-control" rows="6" @bind="Ad.Description" />
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <label>@Loc["Price"]</label>
                        <input type="number" Class="form-control" @bind="Ad.Price" />
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <label>@Loc["Url1"]</label>
                        <input type="url" Class="form-control" @bind="Ad.Url1" />
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <label>@Loc["Url2"]</label>
                        <input type="url" Class="form-control" @bind="Ad.Url2" />
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <label>@Loc["Url3"]</label>
                        <input type="url" Class="form-control" @bind="Ad.Url3" />
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <label>@Loc["Url4"]</label>
                        <input type="url" Class="form-control" @bind="Ad.Url4" />
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <MediaUploader OnChange="AssignImageUrl1" ImgUrl="@Ad.ImageUrl1"></MediaUploader>
                        @Ad.ImageUrl1
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <MediaUploader OnChange="AssignImageUrl2" ImgUrl="@Ad.ImageUrl2"></MediaUploader>
                        @Ad.ImageUrl2
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <MediaUploader OnChange="AssignImageUrl3" ImgUrl="@Ad.ImageUrl3"></MediaUploader>
                        @Ad.ImageUrl3
                    </div>
                    <div class="form-group col-6 col-sm-12">
                        <MediaUploader OnChange="AssignImageUrl4" ImgUrl="@Ad.ImageUrl4"></MediaUploader>
                        @Ad.ImageUrl4
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-12">
                        <div class="card profile-widget border p-4">
                            <div class="profile-widget-header">
                                @if (CurrentPrice.Value > 0)
                                {
                                    <div class="float-right">
                                        <span class="badge badge-info">@CurrentPrice.Value €</span>
                                    </div>
                                }
                                <h4>@CurrentPrice.PriceName</h4>
                            </div>
                            <div class="profile-widget-description pb-0">
                                <div class="profile-widget-name">@CurrentPrice.PriceDescription</div>
                            </div>
                        </div>
                    </div>
                    <div class="alert alert-info p-4">
                        @Loc["RequireLogin"]
                    </div>
                    <div class="form-group">
                        <div class="text-center">
                            <a href="#" class="btn btn-lg" title="@Loc["Back"]" @onclick="Step2"><i class="fa fa-2x fa-arrow-left"></i></a>
                            @if (CurrentPrice.Value == 0)
                            {

                                <button type="submit" class="btn btn-success btn-lg" @onclick="@(async () => await ValidAd())"><i class="far fa-arrow-right"></i>@Loc["ValidAd"]</button>
                            }
                            else
                            {
                                <CryptocoinPayment ClientId="client_id_mvc" ClientSecret="client_secret_mvc"
                                                   DomainApiPayment="https://localhost:44354"
                                                   RedirectSuccessServer="https://localhost:44355/api/Payments/ProcessingCryptoCoinSuccess"
                                                   RedirectErrorServer="https://localhost:44355/api/Payments/ProcessingCryptoCoinFailed"
                                                   RedirectSuccess="https://localhost:44355/payment/Success"
                                                   RedirectError="https://localhost:44355/payment/Error"
                                                   Items=@Cart CssClass="btn btn-success" Price=156.99M>
                                </CryptocoinPayment>
                                <button type="submit" class="btn  btn-successbtn-lg" @onclick="@(async () => await ProcessPayment())"><i class="far fa-credit-card"></i>@Loc["ProcessPayment"]</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
