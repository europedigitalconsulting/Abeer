@page "/Contacts"
@using Abeer.Client 
@inject Microsoft.Extensions.Localization.IStringLocalizer<Contacts> Loc
@inject HttpClient HttpClient

@code
{
    public List<ViewContact> All { get; set; } = new List<ViewContact>();
    public List<ViewContact> Items { get; set; } = new List<ViewContact>();

    protected override async Task OnParametersSetAsync()
    {
        var getContacts = await HttpClient.GetAsync("/api/contacts");
        getContacts.EnsureSuccessStatusCode();

        var json = await getContacts.Content.ReadAsStringAsync();
        All = Newtonsoft.Json.JsonConvert.DeserializeObject<List<ViewContact>>(json);
        Items = All.ToList();

        await base.OnParametersSetAsync();
    }

    public string Term { get; set; }

    private void Search()
    {
        if (string.IsNullOrWhiteSpace(Term))
            Items = All.ToList();
        else
            Items = All.Where(c => c.FirstName.Contains(Term, StringComparison.OrdinalIgnoreCase)
                || c.LastName.Contains(Term, StringComparison.OrdinalIgnoreCase)
                || c.Description.Contains(Term, StringComparison.OrdinalIgnoreCase) ||
                c.DisplayName.Contains(Term, StringComparison.OrdinalIgnoreCase) ||
                c.Email.Contains(Term, StringComparison.OrdinalIgnoreCase) ||
                c.Title.Contains(Term, StringComparison.OrdinalIgnoreCase)).ToList();

        StateHasChanged();
    }

    private void countSearch()
    {
        if (Term.Length >= 5)
            Search();
    }
}
<section class="section">
    <div class="section-header">
        <h1>@Loc["Title"]</h1>
    </div>
    <div class="section-header">
        <div class="input-group">
            <input type="search" id="example-input1-group2" name="example-input1-group2" class="form-control" @bind="Term" @oninput="countSearch">
            <span class="input-group-btn">
                <button type="button" class="btn btn-lg" @onclick="Search"><i class="fa fa-2x  fa-search"></i></button>
            </span>
            <div class="search-backdrop"></div>
        </div>
    </div>
    <div class="section-body">
        @foreach (var contact in Items)
        {
            <div class="card author-box card-primary">
                <div class="card-body">
                    <div class="author-box-left">
                        <img alt="image" src="@contact.PhotoUrl" class="rounded-circle author-box-picture">
                        <div class="clearfix"></div>
                    </div>
                    <div class="author-box-details">
                        <div class="author-box-name">
                            <a href="#">@contact.DisplayName</a>
                        </div>
                        <div class="author-box-job">@contact.Title</div>
                        <div class="author-box-description">
                            <p>
                                @contact.Description
                            </p>
                        </div>
                        <div class="mb-2 mt-3">
                            <div class="text-small font-weight-bold">@Loc["SocialLinks"]</div>
                        </div>
                        @if (contact.SocialNetworks != null)
                        {
                            foreach (var socialNetwork in contact.SocialNetworks)
                            {
                                <a href="@socialNetwork.Url" class="btn btn-social-icon mr-1 btn-@(socialNetwork.Name.ToLower())" target="_blank">
                                    <i class="@socialNetwork.Logo"></i>
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</section>
