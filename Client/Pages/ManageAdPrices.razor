@page "/ManageAdPrices"
@using System.Security.Claims
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@inject HttpClient HttpClient
@inject IHttpClientFactory HttpClientFactory
@inject Microsoft.Extensions.Localization.IStringLocalizer<ManageAdPrices> Loc

@code
{
    bool ModalFormAdVisible;
    bool FormHasError;

    string TitleForm = "EditForm";
    string Mode = "Insert";

    Abeer.Shared.Functional.AdPrice Current = new Abeer.Shared.Functional.AdPrice();

    public string Term { get; set; }

    List<Abeer.Shared.Functional.AdPrice> All = new List<Abeer.Shared.Functional.AdPrice>();
    List<Abeer.Shared.Functional.AdPrice> Items = new List<Abeer.Shared.Functional.AdPrice>();

    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Inject] private NavigationManager navigationManager { get; set; }

    void countTerm(KeyboardEventArgs e)
    {
        if (Term.Length > 5)
            Search();
    }

    protected override async Task OnInitializedAsync()
    {
        var authenticateSate = await authenticationStateTask;

        Console.WriteLine("User claims");

        if (!authenticateSate.User.Identity.IsAuthenticated || !authenticateSate.User.HasClaim(ClaimTypes.Role, "admin"))
        {
            Console.WriteLine("User is not admin, redirect to login");
            navigationManager.NavigateTo("/authentication/Login", true);
        }

        var httpClient = HttpClientFactory.CreateClient("Abeer.Anonymous");
        var getAll = await httpClient.GetAsync("/api/adprice");
        getAll.EnsureSuccessStatusCode();
        var json = await getAll.Content.ReadAsStringAsync();
        All = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Abeer.Shared.Functional.AdPrice>>(json);
        Items = All.ToList();
    }

    void Search()
    {
        Items = All.Where(a => a.PriceName.Contains(Term) || a.PriceDescription.Contains(Term)).ToList();
    }

    void OpenEditModal(Abeer.Shared.Functional.AdPrice AdPrice)
    {
        Current = AdPrice;
        Mode = "Edit";
        ModalFormAdVisible = true;
    }

    void OpenDeleteModal(Abeer.Shared.Functional.AdPrice AdPrice)
    {
        Current = AdPrice;
        Mode = "Delete";
        ModalFormAdVisible = true;
    }

    void OpenCreateAd()
    {
        Current = new Abeer.Shared.Functional.AdPrice();
        Mode = "Insert";
        ModalFormAdVisible = true;
    }

    async Task Save()
    {
        switch (Mode)
        {
            case "Insert":
                {
                    var postResponse = await HttpClient.PostAsJsonAsync<Abeer.Shared.Functional.AdPrice>("/api/adprice", Current);
                    postResponse.EnsureSuccessStatusCode();
                    All.Add(Current);
                    Items.Add(Current);
                    Current = new Abeer.Shared.Functional.AdPrice();
                    ModalFormAdVisible = false;
                    break;
                }
            case "Edit":
                {
                    var postResponse = await HttpClient.PutAsJsonAsync<Abeer.Shared.Functional.AdPrice>("/api/adprice", Current);
                    postResponse.EnsureSuccessStatusCode();
                    Current = new Abeer.Shared.Functional.AdPrice();
                    ModalFormAdVisible = false;
                    break;
                }
            case "Delete":
                {
                    var postResponse = await HttpClient.DeleteAsync($"/api/adprice");
                    postResponse.EnsureSuccessStatusCode();
                    Current = new Abeer.Shared.Functional.AdPrice();
                    ModalFormAdVisible = false;
                    break;
                }
        }
    }
    bool IsFormDisabled => Mode == "Delete";
}
@if (ModalFormAdVisible)
{
    <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">@Loc["EditAdPriceTitle"]</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="@(() => ModalFormAdVisible = false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <section class="section">
                        <div class="section-body">
                                @if (FormHasError)
                                {
                                    <div class="alert alert-danger">
                                        @Loc["UpdateFailedError"]
                                    </div>
                                }
                                <div class="form-group col-6 col-sm-12">
                                    <label>@Loc["Name"]</label>
                                    <input type="text" Class="form-control" @bind="Current.PriceName" disabled="@IsFormDisabled" />
                                </div>
                                <div class="form-group col-6 col-sm-12">
                                    <label>@Loc["Description"]</label>
                                    <textarea type="text" Class="form-control" rows="6" @bind="Current.PriceDescription" disabled="@IsFormDisabled" />
                                </div>
                                <div class="form-group col-6 col-sm-12">
                                    <label>@Loc["Value"]</label>
                                    <input type="number" Class="form-control" @bind="Current.Value" disabled="@IsFormDisabled" />
                                </div>
                                <div class="form-group col-6 col-sm-12">
                                    <label>@Loc["DelayToDisplay"]</label>
                                    <input type="range" min="1" max="10" Class="form-control" @bind="Current.DelayToDisplay" disabled="@IsFormDisabled" />
                                </div>
                                <div class="form-group col-6 col-sm-12">
                                    <label>@Loc["DisplayDuration"]</label>
                                    <input type="number" Class="form-control" @bind="Current.DisplayDuration" disabled="@IsFormDisabled" />
                                </div>
                                <div class="form-group col-6 col-sm-12">
                                    <label>@Loc["MaxViewCount"]</label>
                                    <input type="url" Class="form-control" @bind="Current.MaxViewCount" disabled="@IsFormDisabled" />
                                </div>
                        </div>
                    </section>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" title="@Loc["Save"]" @onclick="Save"><i class="fa fa-2x fa-save"></i></button>
                </div>
            </div>
        </div>
    </div>
}
<section class="section">
    <div class="section-header">
        <h1>@Loc["Title"]</h1>
    </div>
    <div class="section-header">

        <div class="input-group">
            <input type="search" id="example-input1-group2" name="example-input1-group2" class="form-control" @bind="Term" @onkeyup="countTerm">
            <span class="input-group-btn">
                <button type="button" class="btn btn-lg" @onclick="Search"><i class="fa fa-2x  fa-search"></i></button>
            </span>
            <div class="search-backdrop"></div>
        </div>
    </div>
    <div class="section-body">
        <div class="row">
            <div class="col-12">
                @foreach (var ad in Items)
                {
                    <div class="card">
                        <div class="card-header">
                          
                            <h4>@ad.PriceName</h4>
                            <div class="card-header-action">
                                <i  class="btn btn-icon btn-primary" href="#">@ad.Value.FormatCurrency()</i><br/>
                                <button class="btn btn-primary" @onclick="@(() => OpenEditModal(ad))"><i class="fas fa-pen-square"></i></button>
                                <button class="btn btn-danger" @onclick="@(() => OpenDeleteModal(ad))"><i class="fas fa-trash-alt"></i></button>
                            </div>
                           
                        </div>
                        <div class="card-body">
                            <p class="mb-2">
                                @ad.PriceDescription
                            </p>
                        </div>
                       
                    </div>
                }
            </div>
        </div>
    </div>
</section>
<div class="fixed-bottom m-5">
    <a @onclick="OpenCreateAd" class="btn btn-danger btn-circle btn-xl float-right" title="@Loc["Add"]"><i class="fa fa-2x fa-plus"></i></a>
</div>
