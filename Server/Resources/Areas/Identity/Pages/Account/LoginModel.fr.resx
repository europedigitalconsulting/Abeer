<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Connect" xml:space="preserve">
    <value>Se connecter</value>
  </data>
  <data name="ConnectMyCard" xml:space="preserve">
    <value>Se connecter avec ma carte</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright &amp;copy; Fait avec 💙 par Meetag</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Créer un compte</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ForgotPasswordText" xml:space="preserve">
    <value>Vous avez oublié votre mot de passe ?</value>
  </data>
  <data name="GoodMorning" xml:space="preserve">
    <value>Bonjour</value>
  </data>
  <data name="LocalLoginCatchPhrase" xml:space="preserve">
    <value>Vous souhaitez utiliser votre compte local pour vous identifier ?</value>
  </data>
  <data name="LoginWihPinCode" xml:space="preserve">
    <value>Authentifier vous avec une carte d'authentification</value>
  </data>
  <data name="LoginWihPinCodeCatchPhrase" xml:space="preserve">
    <value>Une carte d'authentification est un système sécurisé qui vous permet de vous authentifier sans entrer votre login et mot de passe</value>
  </data>
  <data name="LoginWihPinCodeTitle" xml:space="preserve">
    <value>Si vous disposez d'une carte d'authentification, vous pouvez l'utiliser pour vous authentifier</value>
  </data>
  <data name="Muted-p1" xml:space="preserve">
    <value> vous permet d’échanger et partager avec des milliers de personne vos cartes de visite virtuel en ligne.</value>
  </data>
  <data name="Muted-p2" xml:space="preserve">
    <value>Une carte de visite peut contenir vos coordonnées, vos comptes réseaux sociaux ainsi que des liens personnalisés. Pour accéder à l’espace sécurisé il vous est demandé de vous identifier merci d’entrer votre login et votre mot de passe. Si vous ne disposez pas de compte encore, vous pouvez vous inscrire et rejoindre notre communauté. </value>
  </data>
  <data name="Muted-p3" xml:space="preserve">
    <value>Pour vous permettre de nous tester, vous disposez de 15 jours gratuits sans carte bancaire et sans engagement.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="PinCode" xml:space="preserve">
    <value>Code Pin</value>
  </data>
  <data name="PinDigit" xml:space="preserve">
    <value>Numéro pin</value>
  </data>
  <data name="PrivacyLinkText" xml:space="preserve">
    <value>Comment nous protégeons votre vie prive ?</value>
  </data>
  <data name="RegisterText" xml:space="preserve">
    <value>Si vous n'avez pas encore de compte vous pouvez vous inscrire</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Se souvenir de mon identifiant</value>
  </data>
  <data name="SmartClik" xml:space="preserve">
    <value>Meetag</value>
  </data>
  <data name="TermOfServiceText" xml:space="preserve">
    <value>Quelles sont nos conditions d'utilisation ?</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>S'authentifier sur Meetag</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Bienvenue sur &lt;span class="font-weight-bold"&gt;Meetag&lt;/span&gt;</value>
  </data>
</root>