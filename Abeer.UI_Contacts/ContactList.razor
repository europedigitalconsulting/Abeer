@inject NavigationManager NavigationManager 
@code
{
    [Parameter]
    public Microsoft.Extensions.Localization.IStringLocalizer Loc { get; set; }
    [Parameter]
    public List<ViewContact> Items { get; set; }

    private bool ModalDisplayVideo;
    private ViewApplicationUser ViewContact = new ViewApplicationUser();

    void DisplayDescriptionVideo(ViewApplicationUser viewApplicationUser)
    {
        ViewContact = viewApplicationUser;
        ModalDisplayVideo = true;
    }

    void GotoContact(ViewContact contact)
    {
        NavigationManager.NavigateTo(NavigationManager.ToAbsoluteUri($"/viewprofile/{contact.Contact.DigitCode}").ToString(), true);
    }
}
<div class="container slide-in-elliptic-top-fwd" id="contacts">
    <h5 class="section-title h1">@Loc["YourContacts"]</h5>
    <div class="row">
        <Virtualize Items="Items" Context="contact">
            <!-- Team member -->
            <div class="col-xs-12 col-sm-6 col-md-4" @onclick="@(()=>GotoContact(contact))" style="cursor:pointer">
                <div class="image-flip">
                    <div class="mainflip flip-0">
                        <div class="frontside">
                            <div class="card">
                                <div class="card-body text-center">
                                    <p>
                                        <UserPhotoControl User="contact.Contact" Loc="Loc"></UserPhotoControl>
                                    </p>
                                    <h4 class="card-title">@contact.Contact.DisplayName</h4>
                                    <p class="card-text">@contact.Contact.Title.</p>
                                </div>
                                <div class="card-footer">
                                    @if (contact.UserAccepted == EnumUserAccepted.PENDING || contact.UserAccepted == EnumUserAccepted.REJECT)
                                    {
                                        <p>
                                            @switch (contact.UserAccepted)
                                            {
                                                case EnumUserAccepted.PENDING:
                                                    {
                                                        <span class="badge badge-default">@Loc["InvitationPending"]</span>
                                                        break;
                                                    }
                                                case EnumUserAccepted.REJECT:
                                                    {
                                                        <span class="badge badge-warning">@Loc["InvitationRefused"]</span>
                                                        break;
                                                    }
                                            }
                                        </p>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="backside">
                            <div class="card">
                                <div class="card-body text-center mt-4">
                                    <h4 class="card-title">@contact.Contact.DisplayName</h4>
                                    @if (contact.Contact.DisplayDescription)
                                    {
                                        <p class="card-text">@contact.Contact.Description</p>
                                    }
                                    @if (!string.IsNullOrEmpty(contact.Contact.VideoProfileUrl))
                                    {
                                        <a @onclick="@(() => DisplayDescriptionVideo(contact.Contact))">
                                            <img style="border:2px solid black; position: absolute; left: 51%; top: 52%; transform: translate(-50%, -50%); " width="160" height="160" alt="image" src="@contact.Contact.VideProfileCoverUrl" class="rounded-circle author-box-picture" />
                                        </a>
                                    }
                                    @if (contact.Contact.SocialNetworkConnected?.Any() == true)
                                    {
                                        <ul class="list-inline">
                                            <Virtualize Items="contact.Contact.SocialNetworkConnected" Context="socialNetwork">
                                                <li class="list-inline-item">
                                                    <a class="social-icon text-xs-center" target="_blank" href="@socialNetwork.Url">
                                                        <i class="fa @socialNetwork.Logo"></i>
                                                    </a>
                                                </li>
                                            </Virtualize>
                                        </ul>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- ./Team member -->
        </Virtualize>
    </div>
</div>
@if (ModalDisplayVideo)
{
    <div class="modal fade show effect-open" id="myModal" style="display:block;z-index:9999999;height:550px; max-height:550px;" tabindex="-1" role="dialog" aria-modal="true" aria-labelledby="userVideo">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="@(()=>ModalDisplayVideo=false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <div class="embed-responsive embed-responsive-16by9">
                        <video controls src="@ViewContact.VideoProfileUrl" poster="@ViewContact.VideProfileCoverUrl"></video>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
